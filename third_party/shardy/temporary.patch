diff --git a/shardy/dialect/sdy/transforms/import/sharding_group_import.cc b/shardy/dialect/sdy/transforms/import/sharding_group_import.cc
index 6cfed8f..4061903 100644
--- a/shardy/dialect/sdy/transforms/import/sharding_group_import.cc
+++ b/shardy/dialect/sdy/transforms/import/sharding_group_import.cc
@@ -117,8 +117,8 @@ GroupIdToShardingGroups unifyShardingGroups(
   int64_t reindexId = 0;
   SmallDenseMap<int64_t, int64_t> reindexMap;
   for (const auto& group : shardingGroupEquivalences) {
-    if (group.isLeader()) {
-      reindexMap[group.getData()] = reindexId++;
+    if (group->isLeader()) {
+      reindexMap[group->getData()] = reindexId++;
     }
   }
 
diff --git a/shardy/dialect/sdy/transforms/propagation/aggressive_factor_propagation.cc b/shardy/dialect/sdy/transforms/propagation/aggressive_factor_propagation.cc
index 0a09170..37a382e 100644
--- a/shardy/dialect/sdy/transforms/propagation/aggressive_factor_propagation.cc
+++ b/shardy/dialect/sdy/transforms/propagation/aggressive_factor_propagation.cc
@@ -16,7 +16,6 @@ limitations under the License.
 #include "shardy/dialect/sdy/transforms/propagation/aggressive_factor_propagation.h"
 
 #include <cassert>
-#include <cstddef>
 #include <cstdint>
 #include <tuple>
 
@@ -86,13 +85,13 @@ SmallVector<TensorIndexSize> getFactorToSourceTensor(
 
 // Returns if `factorSharding` has a factor at `factorIndex` which is the
 // strict prefix of `shardingAxes`.
-bool isStrictPrefixOfFactorSharding(const TensorFactorShardings& factorSharding,
-                                    int64_t factorIndex,
-                                    ArrayRef<AxisRefAttr> shardingAxes) {
+bool isStrictPrefixOfFactorSharding(
+    const TensorFactorShardings& factorSharding, int64_t factorIndex,
+    ArrayRef<AxisRefAttr> shardingAxes) {
   if (auto it = factorSharding.factorIndexToSharding.find(factorIndex);
       it != factorSharding.factorIndexToSharding.end()) {
     return isAxisListPrefixOf(it->getSecond().axisRefs, shardingAxes) ==
-           PrefixStatus::STRICT_PREFIX;
+        PrefixStatus::STRICT_PREFIX;
   }
   return false;
 }
@@ -155,7 +154,7 @@ UpdateTensorShardings AggressiveFactorPropagation::propagateFactorShardings(
   AxesPerFactor axesPerFactor;
   axesPerFactor.reserve(factorSizes.size());
   bool allElementsAreEmpty = true;
-  for (size_t i = 0; i < factorSizes.size(); ++i) {
+  for (int64_t i = 0; i < factorSizes.size(); ++i) {
     SmallVector<AxisRefAttr>& axes = axesPerFactor.emplace_back(
         getCompatibleMajorAxes(projection, i, directionAlongFactor(i)));
     if (!axes.empty()) {
diff --git a/third_party/llvm/generated.patch b/third_party/llvm/generated.patch
index 2e6ff58..509398d 100644
--- a/third_party/llvm/generated.patch
+++ b/third_party/llvm/generated.patch
@@ -1,23 +1 @@
 Auto generated patch. Do not edit or delete it, even if empty.
-diff -ruN --strip-trailing-cr a/clang/lib/Sema/SemaCXXScopeSpec.cpp b/clang/lib/Sema/SemaCXXScopeSpec.cpp
---- a/clang/lib/Sema/SemaCXXScopeSpec.cpp
-+++ b/clang/lib/Sema/SemaCXXScopeSpec.cpp
-@@ -873,6 +873,7 @@
-     DependentTemplateSpecializationTypeLoc SpecTL
-       = Builder.push<DependentTemplateSpecializationTypeLoc>(T);
-     SpecTL.setElaboratedKeywordLoc(SourceLocation());
-+    SpecTL.setQualifierLoc(NestedNameSpecifierLoc());
-     SpecTL.setTemplateKeywordLoc(TemplateKWLoc);
-     SpecTL.setTemplateNameLoc(TemplateNameLoc);
-     SpecTL.setLAngleLoc(LAngleLoc);
-diff -ruN --strip-trailing-cr a/utils/bazel/llvm-project-overlay/libc/BUILD.bazel b/utils/bazel/llvm-project-overlay/libc/BUILD.bazel
---- a/utils/bazel/llvm-project-overlay/libc/BUILD.bazel
-+++ b/utils/bazel/llvm-project-overlay/libc/BUILD.bazel
-@@ -1902,7 +1902,6 @@
-     name = "inv_trigf_utils",
-     srcs = ["src/math/generic/inv_trigf_utils.cpp"],
-     hdrs = [
--        "src/math/generic/atan_utils.h",
-         "src/math/generic/inv_trigf_utils.h",
-     ],
-     deps = [
diff --git a/third_party/llvm/workspace.bzl b/third_party/llvm/workspace.bzl
index 91166c3..b47c8f3 100644
--- a/third_party/llvm/workspace.bzl
+++ b/third_party/llvm/workspace.bzl
@@ -4,8 +4,8 @@ load("//third_party:repo.bzl", "tf_http_archive")
 
 def repo(name):
     """Imports LLVM."""
-    LLVM_COMMIT = "537b6541e8067d7ef7aa38791989fca6303b7fdf"
-    LLVM_SHA256 = "6dca45b9afe4f530a29f7cfd21b183f6ee51c61b0a4dede2f1173049615cab5f"
+    LLVM_COMMIT = "6bbdc70066c2bf46ed3d88293e2abfa3d0ffffa3"
+    LLVM_SHA256 = "5ac8c46f2ad013c76f6db0e6f2b53e81ec217026ae5f0b7ab778259586f3139d"
 
     tf_http_archive(
         name = name,
